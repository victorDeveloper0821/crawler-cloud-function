# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# 通常用於打包 Python 應用程式到單一檔案，若您沒使用可以忽略這部分
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# pipenv
# 虛擬環境檔案夾通常是 .venv，但也可能是其他名字
# 若您使用 pipenv，它會自動在 Pipfile 的所在目錄建立虛擬環境
.Pipfile.lock

# poetry
# Poetry 虛擬環境通常在專案外部管理，但是它的鎖定檔案和配置檔案應該被忽略
poetry.lock

# dotenv
.env
.env.local

# virtualenv
.venv
venv/
ENV/

# Spyder project settings
.spyderproject
.spyproject

# PyCharm + all JetBrains IDEs
# 這會忽略預設的工作環境設定資料夾
.idea/

# VSCode
.vscode/

# Google Cloud Function specific ignore
# 忽略部署時產生的暫存檔案和本地認證檔案
.gcloud/
credentials.json
